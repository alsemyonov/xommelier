# This file is automatically generated
# Please do not edit it

require 'xommelier/xml/schema'

module Xommelier
  # This is the XML-Schema for the OPML 2.0 specification that is used
  # when validating opml documents that does not declare a namespace. A
  # copy of this schema that declares opml with namespace can be found
  # in the file opml-2.0-ns.xsd
  schema :xml, xmlns: {xs: "http://www.w3.org/2001/XMLSchema"}, elementFormDefault: "qualified", attributeFormDefault: "unqualified" do
    element :opml, type: :OPML
    complex_type :OPML do
      sequence do
        element :head, type: :Head, min: 1, max: 1
        element :body, type: :Body, min: 1, max: 1
      end
      attribute :version, type: :Version, required: true
    end
    complex_type :Body do
      sequence do
        element :outline, type: :Outline, min: 1, max: :unbounded
      end
    end
    complex_type :Head do
      sequence do
        element :title, type: ns.xs.string, min: 0, max: 1
        element :dateCreated, type: :RFC822Date, min: 0, max: 1
        element :dateModified, type: :RFC822Date, min: 0, max: 1
        element :ownerName, type: ns.xs.string, min: 0, max: 1
        element :ownerEmail, type: :EmailAddress, min: 0, max: 1
        element :ownerId, type: ns.xs.anyURI, min: 0, max: 1
        element :docs, type: ns.xs.anyURI, min: 0, max: 1
        element :expansionState, type: ns.xs.string, min: 0, max: 1
        element :vertScrollState, type: ns.xs.positiveInteger, min: 0, max: 1
        element :windowTop, type: ns.xs.integer, min: 0, max: 1
        element :windowLeft, type: ns.xs.integer, min: 0, max: 1
        element :windowBottom, type: ns.xs.integer, min: 0, max: 1
        element :windowRight, type: ns.xs.integer, min: 0, max: 1
      end
    end
    complex_type :Outline do
      sequence do
        element :outline, type: :Outline, min: 0, max: :unbounded
      end
      attribute :text, type: ns.xs.string, required: true
      attribute :isComment, type: ns.xs.boolean, required: false, default: "false"
      attribute :isBreakpoint, type: ns.xs.boolean, required: false, default: "false"
      attribute :created, type: :RFC822Date, required: false
      attribute :category, type: ns.xs.string, required: false
      attribute :description, type: ns.xs.string, required: false
      attribute :url, type: ns.xs.anyURI, required: false
      attribute :htmlUrl, type: ns.xs.anyURI, required: false
      attribute :xmlUrl, type: ns.xs.anyURI, required: false
      attribute :title, type: ns.xs.string, required: false
      attribute :version, type: ns.xs.string, required: false
      attribute :language, type: :Language, required: false
      attribute :type, type: ns.xs.string, required: false
    end
    simple_type :RFC822Date, base: ns.xs.string, pattern: /((Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s*)?\d\d?\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+\d\d(\d\d)?\s+\d\d:\d\d(:\d\d)?\s+([+\-]?\d\d\d\d|[A-Z]{2,3})/
    simple_type :EmailAddress, base: ns.xs.string, pattern: /[a-zA-Z0-9_\-][a-zA-Z0-9_.\-]*@[a-zA-Z0-9_\-][a-zA-Z0-9_.\-]*/
    simple_type :Language do
      union member_types: [ns.xs.language, :Unknown]
    end
    simple_type :Unknown, base: ns.xs.string, enumeration: ["unknown"]
    simple_type :Version, base: ns.xs.string, enumeration: ["1.0", "2.0"]
  end
end
