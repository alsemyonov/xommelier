# This file is automatically generated
# Please do not edit it

require 'xommelier/xml/schema'

module Xommelier
  # DCterms XML Schema
  # XML Schema for http://purl.org/dc/terms/ namespace
  # Created 2008-02-11
  # Created by 
  # Tim Cole (t-cole3@uiuc.edu)
  # Tom Habing (thabing@uiuc.edu)
  # Jane Hunter (jane@dstc.edu.au)
  # Pete Johnston (p.johnston@ukoln.ac.uk),
  # Carl Lagoze (lagoze@cs.cornell.edu)
  # This schema declares XML elements for the DC elements and
  # DC element refinements from the http://purl.org/dc/terms/ namespace.
  # It reuses the complexType dc:SimpleLiteral, imported from the dc.xsd
  # schema, which permits simple element content, and makes the xml:lang
  # attribute available.
  # This complexType permits the derivation of other complexTypes
  # which would permit child elements.
  # XML elements corresponding to DC elements are declared as substitutable for the abstract element dc:any, and 
  # XML elements corresponding to DC element refinements are defined as substitutable for the base elements 
  # which they refine.
  # This means that the default type for all XML elements (i.e. corresponding to all DC elements and 
  # element refinements) is dc:SimpleLiteral.
  # Encoding schemes are defined as complexTypes which are restrictions
  # of the dc:SimpleLiteral complexType. These complexTypes restrict 
  # values to an appropriates syntax or format using data typing,
  # regular expressions, or enumerated lists.
  # In order to specify one of these encodings an xsi:type attribute must 
  # be used in the instance document.
  # Also, note that one shortcoming of this approach is that any type can be 
  # applied to any of the elements or refinements.  There is no convenient way
  # to restrict types to specific elements using this approach.
  # Changes in 2008-02-11 version:
  # Add element declarations corresponding to 15 new dcterms URIs, and amend use of substitutionGroups.
  # Add compexType definitions corresponding to ISO639-3, RFC4646.
  schema :xmlns, xmlns: {xs: "http://www.w3.org/2001/XMLSchema", dc: "http://purl.org/dc/elements/1.1/", dcmitype: "http://purl.org/dc/dcmitype/", xmlns: "http://purl.org/dc/terms/"}, elementFormDefault: "qualified", attributeFormDefault: "unqualified" do
    namespace "http://purl.org/dc/terms/", as: :xmlns
    import "http://www.w3.org/XML/1998/namespace", schemaLocation: "http://www.w3.org/2001/03/xml.xsd"
    import "http://purl.org/dc/elements/1.1/", schemaLocation: "dc.xsd"
    import "http://purl.org/dc/dcmitype/", schemaLocation: "dcmitype.xsd"
    element :title, substitutionGroup: "dc:title"
    element :creator, substitutionGroup: "dc:creator"
    element :subject, substitutionGroup: "dc:subject"
    element :description, substitutionGroup: "dc:description"
    element :publisher, substitutionGroup: "dc:publisher"
    element :contributor, substitutionGroup: "dc:contributor"
    element :date, substitutionGroup: "dc:date"
    element :type, substitutionGroup: "dc:type"
    element :format, substitutionGroup: "dc:format"
    element :identifier, substitutionGroup: "dc:identifier"
    element :source, substitutionGroup: "dc:source"
    element :language, substitutionGroup: "dc:language"
    element :relation, substitutionGroup: "dc:relation"
    element :coverage, substitutionGroup: "dc:coverage"
    element :rights, substitutionGroup: "dc:rights"
    element :alternative, substitutionGroup: "title"
    element :tableOfContents, substitutionGroup: "description"
    element :abstract, substitutionGroup: "description"
    element :created, substitutionGroup: "date"
    element :valid, substitutionGroup: "date"
    element :available, substitutionGroup: "date"
    element :issued, substitutionGroup: "date"
    element :modified, substitutionGroup: "date"
    element :dateAccepted, substitutionGroup: "date"
    element :dateCopyrighted, substitutionGroup: "date"
    element :dateSubmitted, substitutionGroup: "date"
    element :extent, substitutionGroup: "format"
    element :medium, substitutionGroup: "format"
    element :isVersionOf, substitutionGroup: "relation"
    element :hasVersion, substitutionGroup: "relation"
    element :isReplacedBy, substitutionGroup: "relation"
    element :replaces, substitutionGroup: "relation"
    element :isRequiredBy, substitutionGroup: "relation"
    element :requires, substitutionGroup: "relation"
    element :isPartOf, substitutionGroup: "relation"
    element :hasPart, substitutionGroup: "relation"
    element :isReferencedBy, substitutionGroup: "relation"
    element :references, substitutionGroup: "relation"
    element :isFormatOf, substitutionGroup: "relation"
    element :hasFormat, substitutionGroup: "relation"
    element :conformsTo, substitutionGroup: "relation"
    element :spatial, substitutionGroup: "coverage"
    element :temporal, substitutionGroup: "coverage"
    element :audience, substitutionGroup: "dc:any"
    element :accrualMethod, substitutionGroup: "dc:any"
    element :accrualPeriodicity, substitutionGroup: "dc:any"
    element :accrualPolicy, substitutionGroup: "dc:any"
    element :instructionalMethod, substitutionGroup: "dc:any"
    element :provenance, substitutionGroup: "dc:any"
    element :rightsHolder, substitutionGroup: "dc:any"
    element :mediator, substitutionGroup: "audience"
    element :educationLevel, substitutionGroup: "audience"
    element :accessRights, substitutionGroup: "rights"
    element :license, substitutionGroup: "rights"
    element :bibliographicCitation, substitutionGroup: "identifier"
    complex_type :LCSH do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :MESH do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :DDC do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :LCC do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :UDC do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :Period do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :W3CDTF do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {}, ref: ns.xml.lang, required: "prohibited" do
          union member_types: [ns.xs.gYear, ns.xs.gYearMonth, ns.xs.date, ns.xs.dateTime]
        end
      end
    end
    complex_type :DCMIType do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.dcmitype.DCMIType}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :IMT do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :URI do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.anyURI}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :"ISO639-2" do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :"ISO639-3" do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :RFC1766 do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.language}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :RFC3066 do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.language}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :RFC4646 do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.language}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :Point do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :ISO3166 do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :Box do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    complex_type :TGN do
      simple_content do
        restrict base: ns.dc.SimpleLiteral, simple_type: {base: ns.xs.string}, ref: ns.xml.lang, required: "prohibited"
      end
    end
    # This group is included as a convenience for schema authors
    # who need to refer to all the DC elements and element refinements 
    # in the http://purl.org/dc/elements/1.1/ and 
    # http://purl.org/dc/terms namespaces. 
    # N.B. Refinements available via substitution groups.
    group :elementsAndRefinementsGroup do
      sequence do
        choice min: 0, max: :unbounded do
          element ref: ns.dc.any
        end
      end
    end
    # This is included as a convenience for schema authors who need to define a root
    # or container element for all of the DC elements and element refinements.
    complex_type :elementOrRefinementContainer do
      choice do
        group ref: :elementsAndRefinementsGroup
      end
    end
  end
end
